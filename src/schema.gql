# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SpecialProduct {
  title: String!
  price: String!
  description: String!
  discount: Float!
  time: String!
  category: Category!
}

type Category {
  id: String!
  name: String!
  user: User!
  products: [Product!]!
  specialProducts: [SpecialProduct!]!
}

type Order {
  id: ID!
  createdAt: String!
  totalPrice: String!
  user: User!
  products: [Product!]!
  paid: Boolean!
}

type User {
  id: ID!
  username: String!
  password: String!
  fullName: String!
  phoneNumber: String!
  roles: String!
  products: [Product!]!
  specialProducts: [SpecialProduct!]!
  orders: [Order!]!
  categories: [Category!]!
  likedProducts: [Product!]
}

type Product {
  id: ID!
  title: String!
  description: String!
  price: String!
  status: String!
  createdAt: String!
  category: Category!
  imageUrl: String
  nbrLike: Int!
  likedBy: [User!]
  quantity: Int!
}

type SignupResponse {
  id: ID!
  username: String!
  fullName: String
  phoneNumber: String
  roles: String!
}

type SigninResponse {
  access_token: String!
  id: String!
  username: String!
  fullName: String!
  phoneNumber: String!
  roles: String!
}

type Query {
  getAllProducts(userId: String, title: String, price: String, categoryId: String): [Product!]!
  getProduct(id: String!): Product!
  getUser(id: String!): User!
  getAllUsers: [User!]!
  getUserById(id: String!): User!
  getUserByEmail(email: String!): User!
  getUserByFullName(fullName: String!): User!
  getUserByPhoneNumber(phoneNumber: String!): User!
  getCategoryById(id: String!): Category!
  getCategoryByName(name: String!): Category!
  getAllCategories: [Category!]!
  getOrderById(id: String!): Order!
  getAllOrders: [Order!]!
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  uploadProductImage(productId: ID!, file: Upload!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  deleteProduct(id: String!): Product!
  likeProduct(productId: ID!, userId: ID!): Product!
  dislikeProduct(productId: ID!, userId: ID!): Product!
  signup(signupUserInput: SignupUserInput!): SignupResponse!
  signin(loginUserInput: SigninUserInput!): SigninResponse!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser(id: String!): Boolean!
  createCategory(createCategoryInput: CreateCategoryInput!, id: String!): Category!
  updateCategory(id: String!, updateCategoryInput: UpdateCategoryInput!): Category!
  deleteAllCategories: Boolean!
  deleteCategory(name: String!): String!
  addProductToOrder(productId: String!, orderId: String): Order!
  updateOrder(updateOrderInput: UpdateOrderInput!): Order!
  deleteOrder(id: String!): Boolean!
  createSpecialProduct(createSpecialProductInput: CreateSpecialProductInput!): SpecialProduct!
}

input CreateProductInput {
  title: String!
  price: String!
  createdAt: String! = "2024-05-04T01:16:27.681Z"
  description: String!
  categoryId: String!
  imageUrl: String
  quantity: Float
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateProductInput {
  id: ID!
  title: String
  description: String!
  price: String!
  status: String!
  quantity: Float
  imageUrl: String
  nbrLike: Float
}

input SignupUserInput {
  username: String!
  password: String!
  fullName: String
  phoneNumber: String
}

input SigninUserInput {
  username: String!
  password: String!
}

input UpdateUserInput {
  id: ID!
  fullName: String
  username: String
  password: String
  phoneNumber: String
}

input CreateCategoryInput {
  name: String!
}

input UpdateCategoryInput {
  name: String
}

input UpdateOrderInput {
  id: String!
  totalPrice: String
  paid: Boolean
}

input CreateSpecialProductInput {
  title: String!
  price: String!
  description: String!
  discount: Float!
  time: String!
  categoryId: String!
}